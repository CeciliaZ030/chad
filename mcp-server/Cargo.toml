[package]
name = "mcp-server"
version.workspace = true
edition.workspace = true
default-run = "mcp-server"

[lib]
name = "mcp_server"
path = "src/lib.rs"

[dependencies]
# MCP Framework
rmcp = { git = "https://github.com/modelcontextprotocol/rust-sdk.git", features = [
    "server",
    "macros", 
    "transport-io",
    "transport-worker",
    "transport-streamable-http-server",
    "schemars"
] }

# Async runtime
tokio = { version = "1.0", features = ["full"] }
# Web framework for HTTP transport
axum = "0.8"

# Error handling
anyhow.workspace = true
thiserror.workspace = true

# JSON handling
serde.workspace = true
serde_json.workspace = true

# Async traits
async-trait = "0.1"

# Logging
tracing = "0.1"
tracing-subscriber = { version = "0.3", features = ["env-filter"] }

# Schema generation
schemars = "1.0"

# Ethereum/Cast integration - Direct Foundry Cast usage
cast = { path = "../../foundry/crates/cast", default-features = false }
alloy-primitives = "1.3.1"
alloy-provider = { version = "1.0.23", features = ["reqwest"] }
alloy-rpc-types = "1.0.23"
alloy-ens = "1.0.23"
alloy-network = "1.0.23"
alloy-serde = "1.0.23"
reqwest = { version = "0.11", features = ["json"] }
eyre = "0.6"
dotenv = "0.15"
hex = "0.4"
num-traits = "0.2"

[dev-dependencies]
# Testing dependencies
tokio-test = "0.4"
reqwest = { version = "0.11", features = ["json"] }
